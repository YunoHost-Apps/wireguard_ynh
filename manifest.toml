packaging_format = 2

id = "wireguard"
name = "WireGuard"
description.en = "Fast and modern VPN server, including a configuration webapp"
description.fr = "Serveur VPN rapide et moderne, incluant une webapp pour le configurer"

version = "0.3.9~ynh1"

maintainers = ["tituspijean"]

[upstream]
license = "MIT"
website = "https://www.wireguard.com/"
code = "https://github.com/ngoduykhanh/wireguard-ui"
cpe = "???" # FIXME: optional but recommended if relevant, this is meant to contain the Common Platform Enumeration, which is sort of a standard id for applications defined by the NIST. In particular, Yunohost may use this is in the future to easily track CVE (=security reports) related to apps. The CPE may be obtained by searching here: https://nvd.nist.gov/products/cpe/search. For example, for Nextcloud, the CPE is 'cpe:2.3:a:nextcloud:nextcloud' (no need to include the version number)
fund = "???" # FIXME: optional but recommended (or remove if irrelevant / not applicable). This is meant to be an URL where people can financially support this app, especially when its development is based on volunteers and/or financed by its community. YunoHost may later advertise it in the webadmin.

[integration]
yunohost = ">= 11"
architectures = "all" # FIXME: can be replaced by a list of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386"]
multi_instance = false
ldap = "?" # FIXME: replace with true, false, or "not_relevant". Not to confuse with the "sso" key : the "ldap" key corresponds to wether or not a user *can* login on the app using its YunoHost credentials.
sso = "?" # FIXME: replace with true, false, or "not_relevant". Not to confuse with the "ldap" key : the "sso" key corresponds to wether or not a user is *automatically logged-in* on the app when logged-in on the YunoHost portal.
disk = "50M" # FIXME: replace with an **estimate** minimum disk requirement. e.g. 20M, 400M, 1G, ...
ram.build = "50M" # FIXME: replace with an **estimate** minimum ram requirement. e.g. 50M, 400M, 1G, ...
ram.runtime = "50M" # FIXME: replace with an **estimate** minimum ram requirement. e.g. 50M, 400M, 1G, ...

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by Yunohost's core
    type = "domain"
    full_domain = true

    [install.admin]
    # this is a generic question - ask strings are automatically handled by Yunohost's core
    type = "user"

[resources]
    [resources.sources]
        [resources.sources.main]
        in_subdir = false
        arm64.url = "https://github.com/ngoduykhanh/wireguard-ui/releases/download/v0.4.0/wireguard-ui-v0.3.9-linux-arm64.tar.gz"
        arm64.sha256 = "5eb6c9a40"
        i386.url = "https://github.com/ngoduykhanh/wireguard-ui/releases/download/v0.4.0/wireguard-ui-v0.3.9-linux-386.tar.gz"
        i386.sha256 = "e146a6309"
        armhf.url = "https://github.com/ngoduykhanh/wireguard-ui/releases/download/v0.4.0/wireguard-ui-v0.3,9-linux-arm.tar.gz"
        armhf.sha256 = "7e5ad0c2b4"
        amd64.url = "https://github.com/ngoduykhanh/wireguard-ui/releases/download/v0.4.0/wireguard-ui-v0.3.9-linux-amd64.tar.gz"
        amd64.sha256 = "12297d08"

        autoupdate.strategy = "latest_github_release"
        autoupdate.asset.amd64 = ".*linux-amd64.tar.gz"
        autoupdate.asset.i386 = ".*linux-386.tar.gz"
        autoupdate.asset.armhf = ".*linux-arm.tar.gz"
        autoupdate.asset.arm64 = ".*linux-arm64.tar.gz"


    [resources.system_user]

    [resources.install_dir]

    [resources.permissions]
    main.url = "/"

    [resources.ports]
    wg.default = 8095
    main.default = 12345

    [resources.apt]
    packages = "wireguard"
